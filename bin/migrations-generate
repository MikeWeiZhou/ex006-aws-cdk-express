#!/bin/bash
#
# Automatically generate database migration SQL based on differences in database and TypeORM entity models.

# Target environment: 'dev' | 'test'
TARGET_ENVIRONMENT=$1

# Give name to newly created migration point
MIGRATION_NAME=$2

# Override environment variables if testing
if [[ "$TARGET_ENVIRONMENT" == "test" ]]
then
  echo TEST ENVIRONMENT

  EAR_DB_HOST=$EAR_TEST_DB_HOST
  EAR_DB_PORT=$EAR_TEST_DB_PORT
  EAR_DB_NAME=$EAR_TEST_DB_NAME
  EAR_DB_USER=$EAR_TEST_DB_USER
  EAR_DB_PASSWORD=$EAR_TEST_DB_PASSWORD
else
  echo DEV ENVIRONMENT
fi

# Go to root directory
cd "$(dirname $0)"
cd ..

# Generate migration SQL using TypeORM
MIGRATION_OUTPUT=$(ts-node -r tsconfig-paths/register --transpile-only ./node_modules/typeorm/cli.js migration:generate --config src/config/typeorm.config --name $MIGRATION_NAME --pretty --dryrun)
# Extract migrate up SQL
# [1,/async up/d] delete from first line to line matching 'async up'
# [/queryRunner.query/d] delete line matching 'queryRunner.query'
# [s/");/;/;] search all '");' replace with ';'
# [/}/,$d] delete from line matching '}' to last line
# [s/^ *//g] trims leading whitespace
UP_SQL=$(echo "$MIGRATION_OUTPUT" | sed '1,/async up/d;   /queryRunner.query/d;   s/");/;/;   /}/,$d;   s/^ *//g')
# Extract migrate down SQL
# [1,/async down/d] delete from first line to line matching 'async down'
# [/queryRunner.query/d] delete line matching 'queryRunner.query'
# [s/");/;/;] search all '");' replace with ';'
# [/}/,$d] delete from line matching '}' to last line
# [s/^ *//g] trims leading whitespace
DOWN_SQL=$(echo "$MIGRATION_OUTPUT" | sed '1,/async down/d;   /queryRunner.query/d;   s/");/;/;   /}/,$d;   s/^ *//g')

# Go to database directory
cd db

# Create migration files
CREATE_FILE_OUTPUT=$(npx db-migrate create $MIGRATION_NAME --env default --sql-file)
# Extract schema version name
# Example line before extraction: [INFO] Created migration at /workspace/db/migrations/20210512101829-init.js
#
# [sed '2,$d'] deletes from 2nd line onwards
# [grep -o -P '(?<=migration at ).*(?=.js)')] extract text in between 'db/migrations/' and '.js'
DB_SCHEMA_VERSION=$(echo "$CREATE_FILE_OUTPUT" | sed '2,3d' | grep -o -P '(?<=db/migrations/).*(?=.js)')
# Write SQL to files
echo "$UP_SQL" > "migrations/sqls/$DB_SCHEMA_VERSION-up.sql"
echo "$DOWN_SQL" > "migrations/sqls/$DB_SCHEMA_VERSION-down.sql"

echo "$CREATE_FILE_OUTPUT"